---
- name: create instance(s) on gce
  hosts: localhost
  remote_user: root
  gather_facts: no
  vars:
    instance_ip_addresses: []
    network:
      selfLink: projects/ansible-automates-20191211/global/networks/default

  tasks:
    - name: create instance(s) on gce
      gcp_compute_instance:
        auth_kind: serviceaccount
        name: automates2019
        project: ansible-automates-20191211
        labels:
          event: "{{ tag }}"
        machine_type: n1-standard-1
        disks:
          - auto_delete: yes
            boot: yes
            initialize_params:
              disk_size_gb: 20
              source_image: projects/rhel-cloud/global/images/rhel-7-v20191121
        network_interfaces:
          - network: "{{ network }}"
            access_configs:
              - name: External NAT
                type: ONE_TO_ONE_NAT
        state: present
        status: RUNNING
        zone: europe-west4-a
      register: gce
      delegate_to: localhost

    - name: wait until machines are up and pass along public IP addresses
      block:
        - name: show me the gce variable
          debug:
            var: gce
            verbosity: 2

        - name: show me the natIP variable
          debug:
            var: gce.networkInterfaces[0].accessConfigs.natIP
            verbosity: 2

        - name: wait for instances to come up
          wait_for_connection:
            delay: 10
          remote_user: maxim
          loop: "{{ gce.networkInterfaces[0].accessConfigs.natIP }}"

        - name: add public ip address to list
          set_fact:
            instance_ip_addresses: "['{{ gce.networkInterfaces[0].accessConfigs.natIP }}']"

        - name: show me the instance_ip_addresses variable
          debug:
            var: instance_ip_addresses
            verbosity: 2

        - name: pass on the data :)
          set_stats:
            data:
              instance_ip_addresses: "{{ instance_ip_addresses }}"
      when: gce.status == "RUNNING"